ASCENDING ORDER:
    AREA ASCENDING, CODE, READONLY
ENTRY                   ; Mark first instruction to execute
START
    MOV R8, #4          ; INTIALISE COUNTER TO 4(i.e. N=4)
    LDR R2, =CVALUE     ; ADDRESS OF CODE REGION
    LDR R3, =DVALUE     ; ADDRESS OF DATA REGION
LOOP0
    LDR R1, [R2], #4    ; LOADING VALUES FROM CODE REGION
    STR R1, [R3], #4    ; STORING VALUES TO DATA REGION
    SUBS R8, R8, #1     ; DECREMENT COUNTER
    CMP R8, #0          ; COMPARE COUNTER TO 0
BNE LOOP0               ; LOOP BACK TILL ARRAY ENDS
START1
    MOV R5, #3          ; INTIALISE COUNTER TO 3(i.e. N=4)
    MOV R7, #0          ; FLAG TO DENOTE EXCHANGE HAS OCCURED
    LDR R1, =DVALUE     ; LOADS THE ADDRESS OF FIRST VALUE
LOOP
    LDR R2, [R1], #4    ; WORD ALIGN T0 ARRAY ELEMENT
    LDR R3, [R1]        ; LOAD SECOND NUMBER
    CMP R2, R3          ; COMPARE NUMBERS
    BLT LOOP2           ; IF THE FIRST NUMBER IS < THEN GOTO LOOP2
    STR R2, [R1], #-4   ; INTERCHANGE NUMBER R2 & R3
    STR R3, [R1]        ; INTERCHANGE NUMBER R2 & R3
    MOV R7, #1          ; FLAG DENOTING EXCHANGE HAS TAKEN PLACE
    ADD R1, #4          ; RESTORE THE PTR
LOOP2
    SUBS R5, R5, #1     ; DECREMENT COUNTER
    CMP R5, #0          ; COMPARE COUNTER TO 0
    BNE LOOP            ; LOOP BACK TILL ARRAY ENDS
    CMP R7, #0          ; COMPARING FLAG
    BNE START1          ; IF FLAG IS NOT ZERO THEN GO TO START1 LOOP
BACK B BACK
    NOP
    NOP                 ; ARRAY OF 32 BIT NUMBERS (N=4) IN CODE REGION
    CVALUE
    DCD 0X44444444;
    DCD 0X11111111;
    DCD 0X33333333;
    DCD 0X22222222;
AREA DATA1, DATA, READWRITE ; ARRAY OF 32 BIT NUMBERS IN DATA REGION
DVALUE
DCD 0X00000000
END