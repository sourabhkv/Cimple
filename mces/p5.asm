LARGEST NUMBER:
	AREA LARGEST, CODE, READONLY
ENTRY				; Mark first instruction to execute

START
	MOV R5,#6		; INTIALISE COUNTER TO 6(i.e. N=7)
	LDR R1,=VALUE1		; LOADS THE ADDRESS OF FIRST VALUE
	LDR R2,[R1],#4		; WORD ALIGN T0 ARRAY ELEMENT
LOOP
	LDR R4, [R1], #4	; WORD ALIGN T0 ARRAY ELEMENT
	CMP R2, R4		; COMPARE NUMBERS
	BHI LOOP1		; IF THE FIRST NUMBER IS > THEN GOTO LOOP1
	MOV R2, R4		; IF THE FIRST NUMBER IS < THEN MOV CONTENT R4

LOOP1
	SUBS R5, R5, #1; DECREMENT COUNTER
	CMP R5, #0; COMPARE COUNTER TO 0
	BNE LOOP; LOOP BACK TILL ARRAY ENDS
	LDR R4, =RESULT; LOADS THE ADDRESS OF RESULT
	STR R2, [R4]; STORES THE RESULT IN R2

BACK B BACK
	NOP
	NOP

VALUE1
DCD 0X44444444;
DCD0X22222222
DCD0X11111111
DCD0X33333333
DCD0XAAAAAAAA
DCD0X88888888
DCD0X99999999

AREA DATA2, DATA, READWRITE; TO STORE RESULT IN GIVEN ADDRESS
RESULT DCD 0X0
	END			; Mark end of file



;-----------------------------------------
smallest

	AREA SMALLEST, CODE, READONLY
ENTRY				; Mark first instruction to execute
START
	MOV R5, #6		; INTIALISE COUNTER TO 6(i.e. N=7)
	LDR R1, =VALUE1		; LOADS THE ADDRESS OF FIRST VALUE
	LDR R2, [R1], #4	; WORD ALIGN T0 ARRAY ELEMENT
LOOP
	LDR R4, [R1], #4	; WORD ALIGN T0 ARRAY ELEMENT
	CMP R2, R4		; COMPARE NUMBERS
	BLS LOOP1		; IF THE FIRST NUMBER IS < THEN GOTO LOOP1
	MOV R2, R4		; IF THE FIRST NUMBER IS > THEN MOV CONTENT R4 TO R2
	LOOP1
	SUBS R5, R5, #1		; DECREMENT COUNTER
	CMP R5, #0		; COMPARE COUNTER TO 0
	BNE LOOP		; LOOP BACK TILL ARRAY ENDS
	LDR R4,=RESULT		; LOADS THE ADDRESS OF RESULT
	STR R2, [R4]		; STORES THE RESULT IN R1

BACK B BACK
	NOP
	NOP
				; ARRAY OF 32 BIT NUMBERS (N=7)
VALUE1
DCD 0X44444444
DCD0X22222222
DCD0X11111111
DCD0X22222222
DCD0XAAAAAAAA
DCD0X88888888
DCD0X99999999

AREA DATA2, DATA, READWRITE; TO STORE RESULT IN GIVEN ADDRESS
RESULT DCD 0X0
	END			; Mark end of file
