	AREA ONEZERO, CODE, READONLY
ENTRY				; Mark first instruction to execute
START
	MOV R2, #0		; COUNTER FOR ONES
	MOV R3, #0		; COUNTER FOR ZEROS
	MOV R7, #1		; COUNTER TO GET TWO WORDS
	LDR R6, =VALUE		; LOADS THE ADDRESS OF VALUE
LOOP
	MOV R1, #32		; 32 BITS COUNTER
	LDR R0, [R6], #4	; GET THE 32 BIT VALUE
LOOP0
	MOVS R0, R0, ROR #1	; RIGHT SHIFT TO CHECK CARRY BIT (1's/0's)
	BHI ONES		; IF CARRY BIT IS 1 GOTO ONES BRANCH OTHERWISE NEXT
ZEROS
	ADD R3, R3, #1		; IF CARRY BIT IS 0 THEN INCREMENT THE COUNTER BY 1(R3)
	B LOOP1			; BRANCH TO LOOP1
ONES
	ADD R2, R2, #1		; IF CARRY BIT IS 1 THEN INCREMENT THE COUNTER BY 1(R2)
LOOP1
	SUBS R1, R1, #1		; COUNTER VALUE DECREMENTED BY 1
	BNE LOOP0		; IF NOT EQUAL GOTO TO LOOP0 CHECKS 32BIT
	SUBS R7, R7, #1		; COUNTER VALUE DECREMENTED BY 1
	CMP R7, #0		; COMPARE COUNTER R7 TO 0
	BNE LOOP		; IF NOT EQUAL GOTO TO LOOP
BACK B BACK
	NOP
	NOP
VALUE
DCD 0X11111111, 0XAA55AA55; TWO VALUES IN AN ARRAY
END

;======================================

	AREA DESCENDING, CODE, READONLY
ENTRY; Mark first instruction to execute
START
	MOV R8, #4		; INTIALISE COUNTER TO 4(i.e. N=4)
	LDR R2, =CVALUE		; ADDRESS OF CODE REGION
	LDR R3, =DVALUE		; ADDRESS OF DATA REGION
LOOP0
	LDR R1, [R2], #4	; LOADING VALUES FROM CODE REGION
	STR R1, [R3], #4	; STORING VALUES TO DATA REGION
	SUBS R8, R8, #1		; DECREMENT COUNTER
	CMP R8, #0		; COMPARE COUNTER TO 0
	BNE LOOP0		; LOOP BACK TILL ARRAY ENDS
START1
	MOV R5, #3		; INTIALISE COUNTER TO 3(i.e. N=4)
	MOV R7, #0		; FLAG TO DENOTE EXCHANGE HAS OCCURED
	LDR R1, =DVALUE		; LOADS THE ADDRESS OF FIRST VALUE
LOOP
	LDR R2, [R1], and #4	; WORDALIGNS T0 ARRAY ELEMENT
	LDR R3, [R1]		; LOAD SECOND NUMBER
	CMP R2, R3		; COMPARE NUMBERS
	BGT LOOP2		; IF THE FIRST NUMBER IS > THEN GOTO
LOOP2
	STR R2, [R1], #-4	; INTERCHANGE NUMBER R2 & R3
	STR R3, [R1]		; INTERCHANGE NUMBER R2 & R3
	MOV R7, #1		; FLAG DENOTING EXCHANGE HAS TAKEN PLACE
	ADD R1, #4		; RESTORE THE PTR
LOOP2
	SUBS R5, R5, #1		; DECREMENT COUNTER
	CMP R5, #0		; COMPARE COUNTER TO 0
	BNE LOOP		; LOOP BACK TILL ARRAY ENDS
	CMP R7, #0		; COMPARING FLAG
	BNE START1		; IF FLAG IS NOT ZERO THEN GO TO START1
	LOOP
BACK B BACK
	NOP
	NOP
				; ARRAY OF 32 BIT NUMBERS (N=4) IN CODE REGION
CVALUE
	DCD 0X44444444
	DCD0X11111111
	DCD0X33333333
	DCD0X22222222

AREA DATA1, DATA, READWRITE 	; ARRAY OF 32 BIT NUMBERS IN DATA REGION
DVALUE
DCD 0X00000000
	END; Mark end of file